package com.myapp.spring.hibernate.model;

import java.util.ArrayList;
import java.util.List;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.MapKeyColumn;
import javax.persistence.Table;

@Entity
@Table(name = "Projects")
public class Projects {

	@Id
	@Column(name="project_id")
	@GeneratedValue(strategy = GenerationType.AUTO)
	private long id;

	private String ProjectName;

	public Projects() {
		// TODO Auto-generated constructor stub
	}

	public Projects(String projectName) {
		super();
		ProjectName = projectName;
	}

public long getId() {
	return id;
}

	private void setId(int id) {
		this.id = id;
	}

	public String getProjectName() {
		return ProjectName;
	}

	public void setProjectName(String projectName) {
		ProjectName = projectName;
	}
	@ManyToMany(mappedBy = "")
//	@ManyToMany(fetch=FetchType.LAZY,cascade=CascadeType.MERGE)
//	@MapKeyColumn(name="Projects_key")
	private List<Employee> employee= new ArrayList<Employee>();


	public List<Employee> getEmployee() {
		return employee;
	}

	public void setEmployee(List<Employee> employee) {
		this.employee = employee;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((employee == null) ? 0 : employee.hashCode());
		result = prime * result + (int) (id ^ (id >>> 32));
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (!(obj instanceof Projects))
			return false;
		Projects other = (Projects) obj;
		if (employee == null) {
			if (other.employee != null)
				return false;
		} else if (!employee.equals(other.employee))
			return false;
		if (id != other.id)
			return false;
		return true;
	}

	@Override
	public String toString() {
		StringBuilder builder = new StringBuilder();
		builder.append("Projects [id=");
		builder.append(id);
		builder.append(", ProjectName=");
		builder.append(ProjectName);
		builder.append("]");
		return builder.toString();
	}

}
