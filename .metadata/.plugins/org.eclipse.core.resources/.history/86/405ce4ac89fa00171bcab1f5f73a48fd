package com.myapp.spring.config;

import java.util.Calendar;
import java.util.Date;

import javax.sql.DataSource;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.ComponentScan;
import org.springframework.context.annotation.Configuration;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.jdbc.datasource.DriverManagerDataSource;

@Configuration
@ComponentScan(basePackages = "com.myapp.spring")  // Search for class who is component

public class AppConfig {

	@Bean
	public Date date() {
		return new Date();
	}
	
	@Bean              // date has no interface( it is concrete class ) so no issues with this, bean will be selected by name in this case
	public Date date1() {
		return new Date();
	}

	
	@Bean
	public Calendar calendar() {
		return Calendar.getInstance();
	}

	// Autowiring is done by Type(when multiple inmp of same interface),name(In case of date ),Constructor
    
	
	@Bean
	public DataSource dataSource() {  // DataSource from Sql
		
	DriverManagerDataSource dataSource= new DriverManagerDataSource();
	dataSource.setDriverClassName("com.mysql.jdbc.Driver");
	dataSource.setUrl("jdbc:mysql://localhost:3306/hibernatespring");
	dataSource.setUsername("admin");
	dataSource.setPassword("admin");
	return dataSource;

	}
	
	//Jdbc Template is wrapper given by Spring Frameowrk to perform all operations
//	@Bean
//	public JdbcTemplate jdbcTemplate() {
//		return new JdbcTemplate(dataSource());
//		
//	}

	
	@Bean
	@Autowired
	public JdbcTemplate jdbcTemplate(DataSource dataSource) {
		return new JdbcTemplate(dataSource);
		
	}
	
	

}
