content_assist_category_order=org.eclipse.jdt.ui.textProposalCategory\:65541\u0000org.eclipse.jdt.ui.templateProposalCategory\:2\u0000org.eclipse.jdt.ui.swtProposalCategory\:3\u0000org.eclipse.jdt.ui.javaAllProposalCategory\:65542\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\:65540\u0000org.eclipse.jdt.ui.javaNoTypeProposalCategory\:65539\u0000org.eclipse.jdt.ui.spellingProposalCategory\:65545\u0000org.springsource.ide.eclipse.commons.completions.externalTypesProposalCategory\:65635\u0000
content_assist_disabled_computers=org.eclipse.jdt.ui.textProposalCategory\u0000org.eclipse.recommenders.calls.rcp.proposalCategory.templates\u0000org.eclipse.mylyn.java.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\u0000org.eclipse.jdt.ui.javaNoTypeProposalCategory\u0000org.eclipse.recommenders.chain.rcp.proposalCategory.chain\u0000org.springsource.ide.eclipse.commons.completions.externalTypesProposalCategory\u0000
content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"><lhs name\="java.lang.Cloneable"><rhs name\="com.rabbitmq.client.ConnectionFactory"/></lhs><lhs name\="com.rabbitmq.client.ConnectionFactory"><rhs name\="com.rabbitmq.client.ConnectionFactory"/></lhs><lhs name\="com.rabbitmq.client.DefaultConsumer"><rhs name\="com.rabbitmq.client.QueueingConsumer"/></lhs><lhs name\="com.rabbitmq.client.Consumer"><rhs name\="com.rabbitmq.client.QueueingConsumer"/><rhs name\="com.rabbitmq.client.DefaultConsumer"/></lhs><lhs name\="com.rabbitmq.client.QueueingConsumer"><rhs name\="com.rabbitmq.client.QueueingConsumer"/></lhs><lhs name\="com.myapp.jsm.utils.ExchangeQueueUtils"><rhs name\="com.myapp.jsm.utils.ExchangeQueueUtils"/></lhs><lhs name\="java.lang.Enum"><rhs name\="javax.persistence.TemporalType"/><rhs name\="javax.persistence.FetchType"/><rhs name\="javax.persistence.CascadeType"/><rhs name\="org.springframework.transaction.annotation.Propagation"/><rhs name\="org.springframework.transaction.annotation.Isolation"/><rhs name\="org.springframework.data.jpa.repository.EntityGraph$EntityGraphType"/><rhs name\="org.hibernate.annotations.CacheConcurrencyStrategy"/><rhs name\="javax.persistence.GenerationType"/></lhs><lhs name\="com.hibernate.jpa.dao.OrderRepository"><rhs name\="com.hibernate.jpa.dao.OrderRepositoryImpl"/></lhs><lhs name\="com.hibernate.jpa.dao.OrderRepositoryImpl"><rhs name\="com.hibernate.jpa.dao.OrderRepositoryImpl"/></lhs><lhs name\="java.time.temporal.Temporal"><rhs name\="java.time.Instant"/></lhs><lhs name\="java.time.temporal.TemporalAccessor"><rhs name\="java.time.Instant"/></lhs><lhs name\="java.time.temporal.TemporalAdjuster"><rhs name\="java.time.Instant"/></lhs><lhs name\="com.hibernate.jpa.entity.Customer"><rhs name\="com.hibernate.jpa.entity.Customer"/></lhs><lhs name\="com.hibernate.jpa.dao.CustomerRepository"><rhs name\="com.hibernate.jpa.dao.CustomerRepositoryImpl"/></lhs><lhs name\="com.hibernate.jpa.dao.CustomerRepositoryImpl"><rhs name\="com.hibernate.jpa.dao.CustomerRepositoryImpl"/></lhs><lhs name\="java.util.Collection"><rhs name\="java.util.HashSet"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.lang.Iterable"><rhs name\="java.util.HashSet"/><rhs name\="java.util.ArrayList"/></lhs><lhs name\="java.util.Set"><rhs name\="java.util.HashSet"/></lhs><lhs name\="java.util.Map"><rhs name\="java.util.HashMap"/></lhs><lhs name\="com.myapp.spring.di.GreetingBean"><rhs name\="com.myapp.spring.di.GreetingBeanImpl"/></lhs><lhs name\="com.myapp.spring.di.GreetingBeanImpl"><rhs name\="com.myapp.spring.di.GreetingBeanImpl"/></lhs><lhs name\="org.springframework.context.ConfigurableApplicationContext"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.context.ApplicationContext"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.core.env.EnvironmentCapable"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.beans.factory.ListableBeanFactory"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.beans.factory.BeanFactory"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.beans.factory.HierarchicalBeanFactory"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.context.MessageSource"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.context.ApplicationEventPublisher"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.core.io.support.ResourcePatternResolver"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.core.io.ResourceLoader"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.context.Lifecycle"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="java.io.Closeable"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="java.lang.AutoCloseable"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.beans.factory.DisposableBean"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/><rhs name\="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"/><rhs name\="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"/><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.core.io.DefaultResourceLoader"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.context.support.AbstractApplicationContext"><rhs name\="org.springframework.context.annotation.AnnotationConfigApplicationContext"/></lhs><lhs name\="org.springframework.jdbc.datasource.AbstractDriverBasedDataSource"><rhs name\="org.springframework.jdbc.datasource.DriverManagerDataSource"/></lhs><lhs name\="org.springframework.jdbc.datasource.AbstractDataSource"><rhs name\="org.springframework.jdbc.datasource.DriverManagerDataSource"/></lhs><lhs name\="javax.sql.DataSource"><rhs name\="org.springframework.jdbc.datasource.DriverManagerDataSource"/></lhs><lhs name\="javax.sql.CommonDataSource"><rhs name\="org.springframework.jdbc.datasource.DriverManagerDataSource"/></lhs><lhs name\="java.sql.Wrapper"><rhs name\="org.springframework.jdbc.datasource.DriverManagerDataSource"/></lhs><lhs name\="org.springframework.jdbc.datasource.DriverManagerDataSource"><rhs name\="org.springframework.jdbc.datasource.DriverManagerDataSource"/></lhs><lhs name\="org.springframework.context.ApplicationEvent"><rhs name\="com.myapp.spring.events.MyCustomEvent"/></lhs><lhs name\="java.util.EventObject"><rhs name\="com.myapp.spring.events.MyCustomEvent"/></lhs><lhs name\="com.myapp.spring.events.MyCustomEvent"><rhs name\="com.myapp.spring.events.MyCustomEvent"/></lhs><lhs name\="org.springframework.context.ResourceLoaderAware"><rhs name\="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"/></lhs><lhs name\="org.springframework.beans.factory.Aware"><rhs name\="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"/><rhs name\="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"/><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.context.weaving.LoadTimeWeaverAware"><rhs name\="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"/></lhs><lhs name\="org.springframework.orm.jpa.AbstractEntityManagerFactoryBean"><rhs name\="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"/></lhs><lhs name\="org.springframework.beans.factory.FactoryBean"><rhs name\="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"/></lhs><lhs name\="org.springframework.beans.factory.BeanClassLoaderAware"><rhs name\="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"/></lhs><lhs name\="org.springframework.beans.factory.BeanFactoryAware"><rhs name\="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"/></lhs><lhs name\="org.springframework.beans.factory.BeanNameAware"><rhs name\="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"/><rhs name\="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"/><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.beans.factory.InitializingBean"><rhs name\="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"/><rhs name\="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"/><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.orm.jpa.EntityManagerFactoryInfo"><rhs name\="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"/></lhs><lhs name\="org.springframework.dao.support.PersistenceExceptionTranslator"><rhs name\="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"/></lhs><lhs name\="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"><rhs name\="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"/></lhs><lhs name\="org.springframework.orm.jpa.JpaVendorAdapter"><rhs name\="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/></lhs><lhs name\="org.springframework.transaction.PlatformTransactionManager"><rhs name\="org.springframework.orm.jpa.JpaTransactionManager"/></lhs><lhs name\="java.lang.ThreadLocal"><rhs name\="java.lang.ThreadLocal"/></lhs><lhs name\="com.myapp.spring.aop.LoginBean"><rhs name\="com.myapp.spring.aop.LoginBean"/></lhs><lhs name\="org.springframework.transaction.TransactionDefinition"><rhs name\="org.springframework.transaction.support.DefaultTransactionDefinition"/></lhs><lhs name\="org.springframework.transaction.support.DefaultTransactionDefinition"><rhs name\="org.springframework.transaction.support.DefaultTransactionDefinition"/></lhs><lhs name\="com.rabbitmq.client.ShutdownListener"><rhs name\="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"/></lhs><lhs name\="java.util.EventListener"><rhs name\="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"/></lhs><lhs name\="org.springframework.context.ApplicationContextAware"><rhs name\="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"/><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.context.ApplicationListener"><rhs name\="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"/></lhs><lhs name\="org.springframework.amqp.rabbit.connection.PublisherCallbackChannelConnectionFactory"><rhs name\="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"/></lhs><lhs name\="org.springframework.amqp.rabbit.connection.AbstractConnectionFactory"><rhs name\="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"/></lhs><lhs name\="org.springframework.amqp.rabbit.connection.ConnectionFactory"><rhs name\="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"/></lhs><lhs name\="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"><rhs name\="org.springframework.amqp.rabbit.connection.CachingConnectionFactory"/></lhs><lhs name\="org.springframework.amqp.core.Declarable"><rhs name\="org.springframework.amqp.core.DirectExchange"/><rhs name\="org.springframework.amqp.core.Binding"/></lhs><lhs name\="org.springframework.amqp.core.Exchange"><rhs name\="org.springframework.amqp.core.DirectExchange"/></lhs><lhs name\="org.springframework.amqp.core.AbstractDeclarable"><rhs name\="org.springframework.amqp.core.Binding"/></lhs><lhs name\="org.springframework.amqp.core.Binding"><rhs name\="org.springframework.amqp.core.Binding"/></lhs><lhs name\="org.springframework.context.ApplicationEventPublisherAware"><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.amqp.rabbit.listener.AbstractMessageListenerContainer"><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.amqp.rabbit.listener.MessageListenerContainer"><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.context.SmartLifecycle"><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.context.Phased"><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.amqp.rabbit.connection.RabbitAccessor"><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"><rhs name\="org.springframework.amqp.rabbit.listener.SimpleMessageListenerContainer"/></lhs><lhs name\="org.springframework.amqp.rabbit.listener.adapter.AbstractAdaptableMessageListener"><rhs name\="org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter"/></lhs><lhs name\="org.springframework.amqp.core.MessageListener"><rhs name\="org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter"/></lhs><lhs name\="org.springframework.amqp.rabbit.core.ChannelAwareMessageListener"><rhs name\="org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter"/></lhs><lhs name\="org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter"><rhs name\="org.springframework.amqp.rabbit.listener.adapter.MessageListenerAdapter"/></lhs><lhs name\="Apple"><rhs name\="Apple"/></lhs><lhs name\="java.util.List"><rhs name\="java.util.ArrayList"/></lhs></history>
content_assist_number_of_computers=28
content_assist_proposals_background=255,255,255
content_assist_proposals_foreground=0,0,0
eclipse.preferences.version=1
org.eclipse.jdt.ui.formatterprofiles.version=13
org.eclipse.jdt.ui.text.code_templates_migrated=true
org.eclipse.jdt.ui.text.custom_code_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates/>
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates><template autoinsert\="true" context\="aspectj" deleted\="false" description\="adviceexecution pointcut (AspectJ)" enabled\="true" name\="adviceexecution">adviceexecution()</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="after returning advice (AspectJ)" enabled\="true" name\="after_returning">after(${args}) returning() \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="after throwing advice (AspectJ)" enabled\="true" name\="after_throwing">after(${args}) throwing() \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="around advice (AspectJ)" enabled\="true" name\="around">around(${args}) \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="before advice (AspectJ)" enabled\="true" name\="before">before(${args}) \: ${pointcut_expression} {}</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="call constructor pointcut (AspectJ)" enabled\="true" name\="call_cons">call(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="call method declaration (AspectJ)" enabled\="true" name\="call_method">call(${modifiers_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="cflow pointcut (AspectJ)" enabled\="true" name\="cflow">cflow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="cflowbelow pointcut (AspectJ)" enabled\="true" name\="cflowbelow">cflowbelow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare error (AspectJ)" enabled\="true" name\="dece">declare error \: ${pointcut_expression} \: "";</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare parents (AspectJ)" enabled\="true" name\="decp_extends">declare parents \: ${type_pattern} extends ${type};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare parents (AspectJ)" enabled\="true" name\="decp_implements">declare parents \: ${type_pattern} implements ${type};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare soft (AspectJ)" enabled\="true" name\="decs">declare soft \: ${exception_type} \: ${pointcut_expression};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="declare warning (AspectJ)" enabled\="true" name\="decw">declare warning \: ${pointcut_expression} \: "";</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="execution of a constructor pointcut (AspectJ)" enabled\="true" name\="execution_cons">execution(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="execution of a method pointcut (AspectJ)" enabled\="true" name\="execution_method">execution(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="get pointcut (AspectJ)" enabled\="true" name\="get">get(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="handler pointcut (AspectJ)" enabled\="true" name\="handler">handler(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="initialization pointcut (AspectJ)" enabled\="true" name\="initialization">initialization(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pointcut declaration (AspectJ)" enabled\="true" name\="pc">pointcut ${name}() \: ${pointcut_expression};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="percflow (AspectJ)" enabled\="true" name\="percflow">percflow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="percflowbelow (AspectJ)" enabled\="true" name\="percflowbelow">percflowbelow(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pertarget (AspectJ)" enabled\="true" name\="pertarget">pertarget(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="perthis (AspectJ)" enabled\="true" name\="perthis">perthis(${pointcut_expression})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pertypewithin (AspectJ)" enabled\="true" name\="pertypewithin">pertypewithin(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="pointcut (AspectJ)" enabled\="true" name\="pointcut">pointcut ${name}(${args}) \: ${pointcut_expression};</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="preinitialization pointcut (AspectJ)" enabled\="true" name\="preinitialization">preinitialization(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="set pointcut (AspectJ)" enabled\="true" name\="set">set(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="staticinitialization pointcut (AspectJ)" enabled\="true" name\="staticinitialization">staticinitialization(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="thisJoinPoint (AspectJ)" enabled\="true" name\="thisJoinPoint">thisJoinPoint</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="thisJoinPointStaticPart (AspectJ)" enabled\="true" name\="thisJoinPointStaticPart">thisJoinPointStaticPart</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="within pointcut (AspectJ)" enabled\="true" name\="within">within(${type_pattern})</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="withincode of a constructor pointcut (AspectJ)" enabled\="true" name\="withincode_cons">withincode(${modifier_pattern} ${type_pattern}.new(..))</template><template autoinsert\="true" context\="aspectj" deleted\="false" description\="withincode of a method pointcut (AspectJ)" enabled\="true" name\="withincode_method">withincode(${modifier_pattern} ${ret_type_pattern} ${type_pattern}.${id_pattern}(..))</template></templates>
org.eclipse.jdt.ui.text.templates_migrated=true
spelling_ignore_ampersand_in_properties=true
spelling_ignore_digits=true
spelling_ignore_java_strings=true
spelling_ignore_mixed=true
spelling_ignore_non_letters=true
spelling_ignore_sentence=true
spelling_ignore_single_letters=true
spelling_ignore_upper=true
spelling_ignore_urls=true
spelling_locale_initialized=true
spelling_user_dictionary_encoding=
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
